{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"En route vers Mkdocs ! On teste Pyodide \u2693\ufe0e Une console ? \u2693\ufe0e >>> Il semblerait que \u00e7a marche... Bon faudra peut-\u00eatre retoucher le CSS Un IDE ? \u2693\ufe0e bien ? \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f \\(f(x)= \\frac{x}{2}+5\\) indices fidn blabla fsjdlk dfks,jlkf fsdlkfl kdlfnln Combien y a-t-il de triangles sur cette figure ? En r\u00e9sum\u00e9 Ce probl\u00e8me sera ensuite r\u00e9solu de mani\u00e8re progressive, et c'est l'occasion d'utiliser : des m\u00e9thodes par Attention Un exercice est inclus dans le script ci-dessous. 1 2 3 4 5 6 7 8 9 10 11 def ens_triangle ( n ): \"\"\"Renvoie l'ensemble des points - \u00e0 coordonn\u00e9es enti\u00e8res ; - inclus dans le triangle de c\u00f4t\u00e9 n. \"\"\" points = {} for i in range ( n + 1 ): for j in range ( n + 1 ): if i + j <= n : points . add ( ( i , j ) ) return points R\u00e9ponses aux probl\u00e8mes \u2693\ufe0e R\u00e9ponses Probl\u00e8me Vous pouvez obtenir la r\u00e9ponse, mais avez-vous bien cherch\u00e9 avant ? Triangle ; \\(n=6\\) Il y a \\(78\\) triangles. Rectangle ; \\(n=6\\) et \\(m=10\\) Il y a \\(1155\\) rectangles. Hexagone ; \\(n=5\\) Il y a \\(496\\) triangles. Hexagone \u00e9toil\u00e9 ; \\(n=3\\) Il y a \\(354\\) triangles. test abr\u00e9viations \u2693\ufe0e Il suffit de faire comme \u00e7a et voil\u00e0. admonitions \u2693\ufe0e Note fdsfjlk fdsjflk dskfl vd Info fdjslkfs sdfkjdlk sdfklj fjsdlfk Method Description GET Fetch resource PUT Update resource DELETE Delete resource Hormis la base 10, deux bases sont utilis\u00e9es en informatique : la base 2 (le syst\u00e8me binaire ) la base 16 (le syst\u00e8me hexad\u00e9cimal ) Dans toute la suite, la base dans laquelle le nombre est \u00e9crit sera pr\u00e9cis\u00e9e en indice. Exemple : \\(13_{10}=1101_2=\\rm{D}_{16}\\) I. Le syst\u00e8me binaire \u2693\ufe0e En base 2, on ne dispose que des chiffres 0 et 1 . Le syst\u00e8me binaire est un syst\u00e8me de num\u00e9ration de position (comme le syst\u00e8me d\u00e9cimal, hexad\u00e9cimal... mais pas comme le syst\u00e8me romain). \u00c0 chaque rang correspond une puissance de 2. Du binaire vers le d\u00e9cimal : \u2693\ufe0e ... 128 64 32 16 8 4 2 1 ... \\(2^7\\) \\(2^6\\) \\(2^5\\) \\(2^4\\) \\(2^3\\) \\(2^2\\) \\(2^1\\) \\(2^0\\) ... 1 1 0 1 0 0 1 0 \\(11010010_2=1 \\times 2^7+ 1 \\times 2^6+0 \\times 2^5+1 \\times 2^4+0 \\times 2^3+0 \\times 2^2+1 \\times 2^1+0 \\times 2^0=128+64+32+2=210_{10}\\) Le nombre binaire 11010010 correspond donc au nombre d\u00e9cimal 210. ##### En python : En Python, on peut utiliser la fonction int(\"nombre\",base) . >>>","title":"accueil"},{"location":"#on-teste-pyodide","text":"","title":"On teste Pyodide"},{"location":"#une-console","text":">>> Il semblerait que \u00e7a marche... Bon faudra peut-\u00eatre retoucher le CSS","title":"Une console ?"},{"location":"#un-ide","text":"bien ? \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f \\(f(x)= \\frac{x}{2}+5\\) indices fidn blabla fsjdlk dfks,jlkf fsdlkfl kdlfnln Combien y a-t-il de triangles sur cette figure ? En r\u00e9sum\u00e9 Ce probl\u00e8me sera ensuite r\u00e9solu de mani\u00e8re progressive, et c'est l'occasion d'utiliser : des m\u00e9thodes par Attention Un exercice est inclus dans le script ci-dessous. 1 2 3 4 5 6 7 8 9 10 11 def ens_triangle ( n ): \"\"\"Renvoie l'ensemble des points - \u00e0 coordonn\u00e9es enti\u00e8res ; - inclus dans le triangle de c\u00f4t\u00e9 n. \"\"\" points = {} for i in range ( n + 1 ): for j in range ( n + 1 ): if i + j <= n : points . add ( ( i , j ) ) return points","title":"Un IDE ?"},{"location":"#reponses-aux-problemes","text":"R\u00e9ponses Probl\u00e8me Vous pouvez obtenir la r\u00e9ponse, mais avez-vous bien cherch\u00e9 avant ? Triangle ; \\(n=6\\) Il y a \\(78\\) triangles. Rectangle ; \\(n=6\\) et \\(m=10\\) Il y a \\(1155\\) rectangles. Hexagone ; \\(n=5\\) Il y a \\(496\\) triangles. Hexagone \u00e9toil\u00e9 ; \\(n=3\\) Il y a \\(354\\) triangles.","title":"R\u00e9ponses aux probl\u00e8mes "},{"location":"#test-abreviations","text":"Il suffit de faire comme \u00e7a et voil\u00e0.","title":"test abr\u00e9viations"},{"location":"#admonitions","text":"Note fdsfjlk fdsjflk dskfl vd Info fdjslkfs sdfkjdlk sdfklj fjsdlfk Method Description GET Fetch resource PUT Update resource DELETE Delete resource Hormis la base 10, deux bases sont utilis\u00e9es en informatique : la base 2 (le syst\u00e8me binaire ) la base 16 (le syst\u00e8me hexad\u00e9cimal ) Dans toute la suite, la base dans laquelle le nombre est \u00e9crit sera pr\u00e9cis\u00e9e en indice. Exemple : \\(13_{10}=1101_2=\\rm{D}_{16}\\)","title":"admonitions"},{"location":"#i-le-systeme-binaire","text":"En base 2, on ne dispose que des chiffres 0 et 1 . Le syst\u00e8me binaire est un syst\u00e8me de num\u00e9ration de position (comme le syst\u00e8me d\u00e9cimal, hexad\u00e9cimal... mais pas comme le syst\u00e8me romain). \u00c0 chaque rang correspond une puissance de 2.","title":"I. Le syst\u00e8me binaire"},{"location":"crypto/","text":"Cryptographie \u2693\ufe0e 1. Chiffrement sym\u00e9trique \u2693\ufe0e 1.1 Activit\u00e9 du masque jetable \u2693\ufe0e On consid\u00e8re la variable suivante : 1 masque = \"CETTEPHRASEESTVRAIMENTTRESTRESLONGUEMAISCESTFAITEXPRES\" Cr\u00e9er une fonction chiffre(message_clair, masque) qui chiffre message en le XORant avec masque . Cr\u00e9er une fonction dechiffre(message_chiffre, masque) qui r\u00e9alise l'op\u00e9ration inverse. 1.2 Principe du chiffrement sym\u00e9trique \u2693\ufe0e Dans un chiffrement sym\u00e9trique, c'est la m\u00eame cl\u00e9 qui va servir au chiffrement et au d\u00e9chiffrement. Qu'appelle-t-on une cl\u00e9 ? \u2693\ufe0e La cl\u00e9 est un renseignement permettant de chiffrer ou d\u00e9chiffrer un message. Cela peut \u00eatre : - un nombre (dans un simple d\u00e9calage des lettres de l'alphabet, comme le chiffre de C\u00e9sar ) - une phrase (dans la m\u00e9thode du masque jetable ) - une image (imaginez un chiffrement o\u00f9 on effectue un XOR par les pixels d'une image, comme dans cette \u00e9nigme ) Un chiffrement est dit sym\u00e9trique lorsque la connaissance de la cl\u00e9 ayant servi au chiffrement permet de d\u00e9chiffrer le message. Par exemple, Alice chiffre son message en d\u00e9calant les lettres de 3 rangs vers la droite dans l'alphabet, Bob saura qu'il doit les d\u00e9caler de 3 rangs vers la gauche pour retrouver le message initial. Quel est l'avantage d'un chiffrement sym\u00e9trique ? \u2693\ufe0e Les chiffrements sym\u00e9triques sont souvent rapides, consommant peu de ressources et donc adapt\u00e9s au chiffrement de flux important d'informations. Comme nous le verrons, la s\u00e9curisation des donn\u00e9es transitant par le protocole https est bas\u00e9e sur un chiffrement sym\u00e9trique. Quel est l'inconv\u00e9nient d'un chiffrement sym\u00e9trique ? \u2693\ufe0e La cl\u00e9 ! Si Alice et Bob ont besoin d'utiliser un chiffrement pour se parler, comment peuvent-ils \u00e9changer leurs cl\u00e9s puisque leur canal de transmission n'est pas s\u00fbr ? La chiffrement sym\u00e9trique impose qu'Alice et Bob aient pu se rencontrer physiquement au pr\u00e9alable pour convenir d'une cl\u00e9 secr\u00e8te, ou bien qu'ils aient r\u00e9ussi \u00e0 \u00e9tablir une connexion s\u00e9curis\u00e9e pour s'\u00e9changer cette cl\u00e9. Un chiffrement sym\u00e9trique est-il un chiffrement de mauvaise qualit\u00e9 ? \u2693\ufe0e Pas du tout ! S'il est associ\u00e9 naturellement \u00e0 des chiffrements simples et faibles (comme le d\u00e9calage de C\u00e9sar), un chiffrement sym\u00e9trique peut \u00eatre tr\u00e8s robuste... voire inviolable. C'est le cas du masque jetable. Si le masque avec lequel on effectue le XOR sur le message est aussi long que le message, alors il est impossible de retrouver le message initial. Pourquoi ? Imaginons qu'Alice veuille transmettre le message clair \"LUNDI\". Elle le chiffre avec un masque jetable (que connait aussi Bob), et Bob re\u00e7oit donc \"KHZOK\". Si Marc a intercept\u00e9 le message \"KHZOK\", m\u00eame s'il sait que la m\u00e9thode de chiffrement utilis\u00e9e est celle du masque jetable (principe de Kerckhoffs), il n'a pas d'autre choix que de tester tous les masques de 5 lettres possibles. Ce qui lui donne 26^5 possibilit\u00e9s (plus de 11 millions) pour le masque, et par cons\u00e9quent (propri\u00e9t\u00e9 de bijectivit\u00e9 du XOR) 26^5 possibilit\u00e9s pour le message \u00abd\u00e9chiffr\u00e9\u00bb... Cela signifie que Marc verra appara\u00eetre, dans sa tentative de d\u00e9chiffrage, les mots \"MARDI\", \"JEUDI\", \"JOUDI\", \"STYLO\", \"FSDJK\", \"LUNDI, \"LUNDA\"... Il n'a aucune possibilit\u00e9 de savoir o\u00f9 est le bon message original parmi toutes les propositions (on parle de s\u00e9curit\u00e9 s\u00e9mantique ). Principe de Kerckhoffs : la s\u00e9curit\u00e9 d'un syst\u00e8me de chiffrement ne doit reposer que sur la s\u00e9curit\u00e9 de la cl\u00e9, et non pas sur la connaissance de l'algorithme de chiffrement. Cet algorithme peut m\u00eame \u00eatre public (ce qui est pratiquement toujours le cas). Quels sont les chiffrements sym\u00e9triques modernes ? \u2693\ufe0e L'algorithme de chiffrement sym\u00e9trique le plus utilis\u00e9 actuellement est le chiffrement AES , pour Advanced Encryption Standard. - chiffrement par bloc de 128 bits, r\u00e9partis dans une matrice de 16 octets (matrice carr\u00e9e de taille 4). - ces 128 bits sont transform\u00e9s par des rotations, multiplications, transpositions, [...] de la matrice initiale, en faisant intervenir dans ces transformations une cl\u00e9 de 128, 192 ou 256 bits. - pour l'AES-256 (avec une cl\u00e9 de 256 bits), l'attaque par force brute n\u00e9cessiterait 2^256 op\u00e9rations, soit un nombre \u00e0 78 chiffres... - il n'existe pas d'attaque connue efficace \u00e0 ce jour. Les seules attaques sont des attaques sur des faiblesses d'impl\u00e9mentation, ou par canal auxiliaire . 2. Chiffrement asym\u00e9trique \u2693\ufe0e Invent\u00e9 par Whitfield Diffie et Martin Hellman en 1976, le chiffrement asym\u00e9trique vient r\u00e9soudre l'inconv\u00e9nient essentiel du chiffrement sym\u00e9trique : le n\u00e9cessaire partage d'un secret (la cl\u00e9) avant l'\u00e9tablissement de la communication s\u00e9curis\u00e9e. 2.1 Principe du chiffrement asym\u00e9trique \u2693\ufe0e Le principe de base est l'existence d'une cl\u00e9 publique , appel\u00e9e \u00e0 \u00eatre distribu\u00e9e largement, et d'une cl\u00e9 priv\u00e9e , qui ne quitte jamais son propri\u00e9taire. 2.2 Le r\u00f4le interchangeable des cl\u00e9s publiques et priv\u00e9es \u2693\ufe0e L'illustration pr\u00e9c\u00e9dente associe : - une image de cadenas \u00e0 la cl\u00e9 publique (car on s'en sert pour chiffrer les messages) - une image de cl\u00e9 \u00e0 la cl\u00e9 priv\u00e9e (car on s'en sert pour d\u00e9chiffrer les messages) Concr\u00e8tement, (nous le verrons dans l'applciation par le chiffrement RSA), la cl\u00e9 priv\u00e9e et la cl\u00e9 publique sont deux nombres aux r\u00f4les identiques. Appelons-les A et B : - il est impossible de trouver A en fonction de B. R\u00e9ciproquement, si on conna\u00eet A, il est impossible d'en d\u00e9duire B. - si on chiffre un message avec A, on peut le d\u00e9chiffrer avec B. R\u00e9ciproquement, si on chiffre avec B, on peut d\u00e9chiffrer le message gr\u00e2ce \u00e0 A. - on peut donc chiffrer avec une cl\u00e9 publique et d\u00e9chiffrer avec la cl\u00e9 priv\u00e9e associ\u00e9e (ce qui est fait dans l'exemple pr\u00e9c\u00e9dent). Mais on peut aussi chiffrer avec la cl\u00e9 priv\u00e9e, et d\u00e9chiffrer avec la cl\u00e9 publique associ\u00e9e. A et B ont donc des r\u00f4les interchangeables (chacun peut \u00eatre un cadenas, chacun peut \u00eatre une cl\u00e9), et ce n'est qu'en connaissant A et B qu'on peut d\u00e9chiffrer le message. Nous allons donc maintenant adopter une nouvelle convention infographique : Consid\u00e9rons ce message : Si ce message est chiffr\u00e9 avec la cl\u00e9 publique d'Alice, le message sera : Si on d\u00e9chiffre ce message avec la cl\u00e9 priv\u00e9e d'Alice, il deviendra et donc puisque l'application de la cl\u00e9 priv\u00e9e sur la cl\u00e9 publique, ou bien de la cl\u00e9 publique sur la cl\u00e9 priv\u00e9e, permet de retrouver le message en clair. De mani\u00e8re graphique, la connaissance des deux moiti\u00e9s du disque qui s'assemblent permet de les faire disparaitre, qu'importe qu'on ait commenc\u00e9 par chiffrer avec la cl\u00e9 publique ou avec la cl\u00e9 priv\u00e9e. 2.3 Communication authentifi\u00e9e. \u2693\ufe0e Dans la situation du 2.1, Alice (qui a distribu\u00e9 largement sa cl\u00e9 publique) ne peut pas s'assurer que le message vient bien de Bob. Il peut avoir \u00e9t\u00e9 cr\u00e9\u00e9 par Marc, qui signe \u00abBob\u00bb et usurpe ainsi son identit\u00e9. Le protocole que nous allons d\u00e9crire ci-dessous permet : - d'emp\u00eacher qu'un message intercept\u00e9 soit d\u00e9chiffr\u00e9 (ce qui \u00e9tait d\u00e9j\u00e0 le cas dans le 2.1) - mais aussi de s'assurer que chaque personne est bien celle qu'elle pr\u00e9tend \u00eatre : on r\u00e9sout le probl\u00e8me d'authentification . En r\u00e9sum\u00e9 : - Alice est s\u00fbre que seul Bob pourra d\u00e9chiffrer le message qu'elle envoie. - Bob est s\u00fbr que le message qu'il re\u00e7oit vient bien d'Alice. 2.3 Un exemple de chiffrement asym\u00e9trique : le chiffrement RSA \u2693\ufe0e Lorsqu'en 1976 Diffie et Hellman pr\u00e9sentent le concept de chiffrement sym\u00e9trique (souvent appel\u00e9 cryptographie \u00e0 cl\u00e9s publiques ), ils en proposent uniquement un mod\u00e8le th\u00e9orique, n'ayant pas trouv\u00e9 une r\u00e9elle impl\u00e9mentation de leur protocole. Trois chercheurs du MIT (Boston), Ron R**ivest, Adi **S**hamir et Len **A**dleman se penchent alors sur ce protocole, convaincus qu'il est en effet impossible d'en trouver une impl\u00e9mentation pratique. En 1977, au cours de leurs recherches, ils d\u00e9montrent en fait l'inverse de ce qu'ils cherchaient : ils cr\u00e9ent le premier protocole concret de chiffrement asym\u00e9trique : le chiffrement **RSA . Le chiffrement RSA est bas\u00e9 sur l'arithm\u00e9tique modulaire . Faire des calculs modulo un entier n , c'est ne garder que le reste de la division euclidienne par n . Le fait que 15 soit \u00e9gal \u00e0 1 modulo 7 (car 15=2*7+1) s'\u00e9crira 15 \u2261 1 [7]. De m\u00eame, 10 \u2261 3 [7], 25 \u2261 4 [7], 32 \u2261 2 [10], etc. \u00c9tape 1 \u2693\ufe0e Alice choisit 2 grands nombres premiers p et q . Dans la r\u00e9alit\u00e9 ces nombres seront vraiment tr\u00e8s grands (plus de 100 chiffres). Dans notre exemple, nous prendrons p = 3 et q = 11 . \u00c9tape 2 \u2693\ufe0e Alice multiplie ces deux nombres p et q et obtient ainsi un nombre n . Il est tr\u00e8s facile pour Alice de calculer n en connaissant p et q , mais il extr\u00eamement difficile pour Marc de faire le travail inverse : trouver p et q en connaissant n prend un temps exponentiel avec la taille de n . C'est sur cette difficult\u00e9 (appel\u00e9e difficult\u00e9 de factorisation ) que repose la robustesse du syst\u00e8me RSA. \u00c9tape 3 \u2693\ufe0e Alice choisit un nombre e qui doit \u00eatre premier avec (p-1)(q-1) . On note \u03c6(n) le nombre (p-1)(q-1) . Dans notre exemple, (p-1)(q-1) = 20 , Alice choisit donc e = 3 . (mais elle aurait pu aussi choisir 7, 9, 13...). Le couple (e, n) sera la cl\u00e9 publique d'Alice. Elle la diffuse \u00e0 qui veut lui \u00e9crire. Dans notre exemple, la cl\u00e9 publique d'Alice est (3, 33) . \u00c9tape 4 \u2693\ufe0e Alice calcule maintenant sa cl\u00e9 priv\u00e9e : elle doit trouver un nombre d qui v\u00e9rifie l'\u00e9galit\u00e9 e.d \u2261 1 [\u03c6(n)] . Dans notre exemple, comme 7 x 3 \u2261 1 [20] , ce nombre d est \u00e9gal \u00e0 7. En pratique, il existe un algorithme simple (algorithme d' Euclide \u00e9tendu ) pour trouver cette valeur d , appel\u00e9e inverse de e . Le couple (d, n) sera la cl\u00e9 priv\u00e9e d'Alice. Elle ne la diffuse \u00e0 personne. Dans notre exemple, la cl\u00e9 priv\u00e9e d'Alice est (7, 33) . \u00c9tape 5 \u2693\ufe0e Supposons que Bob veuille \u00e9crire \u00e0 Alice pour lui envoyer le nombre 4. Il poss\u00e8de la cl\u00e9 publique d'Alice, qui est (3, 33) . Il calcule donc 4**3 modulo 33, qui vaut 31. C'est cette valeur 31 qu'il transmet \u00e0 Alice. Si Marc intercepte cette valeur 31, m\u00eame en connaissant la cl\u00e9 publique d'Alice (3,33), il ne peut pas r\u00e9soudre l'\u00e9quation \\(x^3\\) \u2261 31 [33] de mani\u00e8re efficace. \u00c9tape 6 \u2693\ufe0e Alice re\u00e7oit la valeur 31. Il lui suffit alors d'\u00e9lever 31 \u00e0 la puissance 7 (sa cl\u00e9 priv\u00e9e), et de calculer le reste modulo 33 : 31**7 = 27512614111 27512614111 \u2261 4 [33] Elle r\u00e9cup\u00e8re la valeur 4, qui est bien le message original de Bob. Comment \u00e7a marche ? Gr\u00e2ce au Petit Th\u00e9or\u00e8me de Fermat , on d\u00e9montre (voir ici ) assez facilement que M**ed \u2261 M [n]. Il faut remarquer que M **ed = M **de. On voit que les r\u00f4les de la cl\u00e9 publique et de la cl\u00e9 priv\u00e9e sont sym\u00e9triques : un message chiffr\u00e9 avec la cl\u00e9 publique se d\u00e9chiffrera en le chiffrant avec la cl\u00e9 priv\u00e9e, tout comme un message chiffr\u00e9 avec la cl\u00e9 priv\u00e9e se d\u00e9chiffrera en le chiffrant avec la cl\u00e9 publique. Animation interactive issue du de la page https://interstices.info/nombres-premiers-et-cryptologie-lalgorithme-rsa/ RSA, un syst\u00e8me inviolable ? \u2693\ufe0e Le chiffrement RSA a des d\u00e9fauts (notamment une grande consommation des ressources, due \u00e0 la manipulation de tr\u00e8s grands nombres). Mais le choix d'une cl\u00e9 publique de grande taille (actuellement 1024 ou 2048 bits) le rend pour l'instant inviolable. Actuellement, il n'existe pas d'algorithme efficace pour factoriser un nombre ayant plusieurs centaines de chiffres. Deux \u00e9v\u00e8nements pourraient faire s'\u00e9crouler la s\u00e9curit\u00e9 du RSA : - la d\u00e9couverte d'un algorithme efficace de factorisation, capable de tourner sur les ordinateurs actuels. Cette annonce est r\u00e9guli\u00e8rement faite, et tout aussi r\u00e9guli\u00e8rement contredite par la communaut\u00e9 scientifique. (voir, le 05/03/2021, https://www.schneier.com/blog/archives/2021/03/no-rsa-is-not-broken.html ) - l'av\u00e8nement d' ordinateurs quantiques , dont la vitesse d'ex\u00e9cution permettrait une factorisation rapide. Il est \u00e0 noter que l'algorithme de factorisation destin\u00e9 \u00e0 tourner sur un ordinateur quantique existe d\u00e9j\u00e0 : l'algorithme de Schor .","title":"cryptographie"},{"location":"crypto/#cryptographie","text":"","title":"Cryptographie"},{"location":"crypto/#1-chiffrement-symetrique","text":"","title":"1. Chiffrement sym\u00e9trique"},{"location":"crypto/#11-activite-du-masque-jetable","text":"On consid\u00e8re la variable suivante : 1 masque = \"CETTEPHRASEESTVRAIMENTTRESTRESLONGUEMAISCESTFAITEXPRES\" Cr\u00e9er une fonction chiffre(message_clair, masque) qui chiffre message en le XORant avec masque . Cr\u00e9er une fonction dechiffre(message_chiffre, masque) qui r\u00e9alise l'op\u00e9ration inverse.","title":"1.1 Activit\u00e9 du masque jetable"},{"location":"crypto/#12-principe-du-chiffrement-symetrique","text":"Dans un chiffrement sym\u00e9trique, c'est la m\u00eame cl\u00e9 qui va servir au chiffrement et au d\u00e9chiffrement.","title":"1.2 Principe du chiffrement sym\u00e9trique"},{"location":"crypto/#2-chiffrement-asymetrique","text":"Invent\u00e9 par Whitfield Diffie et Martin Hellman en 1976, le chiffrement asym\u00e9trique vient r\u00e9soudre l'inconv\u00e9nient essentiel du chiffrement sym\u00e9trique : le n\u00e9cessaire partage d'un secret (la cl\u00e9) avant l'\u00e9tablissement de la communication s\u00e9curis\u00e9e.","title":"2. Chiffrement asym\u00e9trique"},{"location":"crypto/#21-principe-du-chiffrement-asymetrique","text":"Le principe de base est l'existence d'une cl\u00e9 publique , appel\u00e9e \u00e0 \u00eatre distribu\u00e9e largement, et d'une cl\u00e9 priv\u00e9e , qui ne quitte jamais son propri\u00e9taire.","title":"2.1 Principe du chiffrement asym\u00e9trique"},{"location":"crypto/#22-le-role-interchangeable-des-cles-publiques-et-privees","text":"L'illustration pr\u00e9c\u00e9dente associe : - une image de cadenas \u00e0 la cl\u00e9 publique (car on s'en sert pour chiffrer les messages) - une image de cl\u00e9 \u00e0 la cl\u00e9 priv\u00e9e (car on s'en sert pour d\u00e9chiffrer les messages) Concr\u00e8tement, (nous le verrons dans l'applciation par le chiffrement RSA), la cl\u00e9 priv\u00e9e et la cl\u00e9 publique sont deux nombres aux r\u00f4les identiques. Appelons-les A et B : - il est impossible de trouver A en fonction de B. R\u00e9ciproquement, si on conna\u00eet A, il est impossible d'en d\u00e9duire B. - si on chiffre un message avec A, on peut le d\u00e9chiffrer avec B. R\u00e9ciproquement, si on chiffre avec B, on peut d\u00e9chiffrer le message gr\u00e2ce \u00e0 A. - on peut donc chiffrer avec une cl\u00e9 publique et d\u00e9chiffrer avec la cl\u00e9 priv\u00e9e associ\u00e9e (ce qui est fait dans l'exemple pr\u00e9c\u00e9dent). Mais on peut aussi chiffrer avec la cl\u00e9 priv\u00e9e, et d\u00e9chiffrer avec la cl\u00e9 publique associ\u00e9e. A et B ont donc des r\u00f4les interchangeables (chacun peut \u00eatre un cadenas, chacun peut \u00eatre une cl\u00e9), et ce n'est qu'en connaissant A et B qu'on peut d\u00e9chiffrer le message. Nous allons donc maintenant adopter une nouvelle convention infographique : Consid\u00e9rons ce message : Si ce message est chiffr\u00e9 avec la cl\u00e9 publique d'Alice, le message sera : Si on d\u00e9chiffre ce message avec la cl\u00e9 priv\u00e9e d'Alice, il deviendra et donc puisque l'application de la cl\u00e9 priv\u00e9e sur la cl\u00e9 publique, ou bien de la cl\u00e9 publique sur la cl\u00e9 priv\u00e9e, permet de retrouver le message en clair. De mani\u00e8re graphique, la connaissance des deux moiti\u00e9s du disque qui s'assemblent permet de les faire disparaitre, qu'importe qu'on ait commenc\u00e9 par chiffrer avec la cl\u00e9 publique ou avec la cl\u00e9 priv\u00e9e.","title":"2.2 Le r\u00f4le interchangeable des cl\u00e9s publiques et priv\u00e9es"},{"location":"crypto/#23-communication-authentifiee","text":"Dans la situation du 2.1, Alice (qui a distribu\u00e9 largement sa cl\u00e9 publique) ne peut pas s'assurer que le message vient bien de Bob. Il peut avoir \u00e9t\u00e9 cr\u00e9\u00e9 par Marc, qui signe \u00abBob\u00bb et usurpe ainsi son identit\u00e9. Le protocole que nous allons d\u00e9crire ci-dessous permet : - d'emp\u00eacher qu'un message intercept\u00e9 soit d\u00e9chiffr\u00e9 (ce qui \u00e9tait d\u00e9j\u00e0 le cas dans le 2.1) - mais aussi de s'assurer que chaque personne est bien celle qu'elle pr\u00e9tend \u00eatre : on r\u00e9sout le probl\u00e8me d'authentification . En r\u00e9sum\u00e9 : - Alice est s\u00fbre que seul Bob pourra d\u00e9chiffrer le message qu'elle envoie. - Bob est s\u00fbr que le message qu'il re\u00e7oit vient bien d'Alice.","title":"2.3 Communication authentifi\u00e9e."},{"location":"crypto/#23-un-exemple-de-chiffrement-asymetrique-le-chiffrement-rsa","text":"Lorsqu'en 1976 Diffie et Hellman pr\u00e9sentent le concept de chiffrement sym\u00e9trique (souvent appel\u00e9 cryptographie \u00e0 cl\u00e9s publiques ), ils en proposent uniquement un mod\u00e8le th\u00e9orique, n'ayant pas trouv\u00e9 une r\u00e9elle impl\u00e9mentation de leur protocole. Trois chercheurs du MIT (Boston), Ron R**ivest, Adi **S**hamir et Len **A**dleman se penchent alors sur ce protocole, convaincus qu'il est en effet impossible d'en trouver une impl\u00e9mentation pratique. En 1977, au cours de leurs recherches, ils d\u00e9montrent en fait l'inverse de ce qu'ils cherchaient : ils cr\u00e9ent le premier protocole concret de chiffrement asym\u00e9trique : le chiffrement **RSA . Le chiffrement RSA est bas\u00e9 sur l'arithm\u00e9tique modulaire . Faire des calculs modulo un entier n , c'est ne garder que le reste de la division euclidienne par n . Le fait que 15 soit \u00e9gal \u00e0 1 modulo 7 (car 15=2*7+1) s'\u00e9crira 15 \u2261 1 [7]. De m\u00eame, 10 \u2261 3 [7], 25 \u2261 4 [7], 32 \u2261 2 [10], etc.","title":"2.3 Un exemple de chiffrement asym\u00e9trique : le chiffrement RSA"}]}